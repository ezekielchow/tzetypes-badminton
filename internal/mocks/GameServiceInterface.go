// Code generated by mockery v2.46.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "common/models"

	oapiprivate "common/oapiprivate"

	oapipublic "common/oapipublic"
)

// GameServiceInterface is an autogenerated mock type for the GameServiceInterface type
type GameServiceInterface struct {
	mock.Mock
}

// AddGameSteps provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) AddGameSteps(ctx context.Context, input oapiprivate.AddGameStepsRequestObject) (oapiprivate.AddGameStepsResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for AddGameSteps")
	}

	var r0 oapiprivate.AddGameStepsResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.AddGameStepsRequestObject) (oapiprivate.AddGameStepsResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.AddGameStepsRequestObject) oapiprivate.AddGameStepsResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.AddGameStepsResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.AddGameStepsRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOrUpdateGameHistory provides a mock function with given fields: ctx, input, user
func (_m *GameServiceInterface) CreateOrUpdateGameHistory(ctx context.Context, input oapiprivate.CreateOrUpdateGameHistoryRequestObject, user models.User) (oapiprivate.CreateOrUpdateGameHistoryResponseObject, error) {
	ret := _m.Called(ctx, input, user)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrUpdateGameHistory")
	}

	var r0 oapiprivate.CreateOrUpdateGameHistoryResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.CreateOrUpdateGameHistoryRequestObject, models.User) (oapiprivate.CreateOrUpdateGameHistoryResponseObject, error)); ok {
		return rf(ctx, input, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.CreateOrUpdateGameHistoryRequestObject, models.User) oapiprivate.CreateOrUpdateGameHistoryResponseObject); ok {
		r0 = rf(ctx, input, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.CreateOrUpdateGameHistoryResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.CreateOrUpdateGameHistoryRequestObject, models.User) error); ok {
		r1 = rf(ctx, input, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteGameSteps provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) DeleteGameSteps(ctx context.Context, input oapiprivate.DeleteGameStepsRequestObject) (oapiprivate.DeleteGameStepsResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for DeleteGameSteps")
	}

	var r0 oapiprivate.DeleteGameStepsResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.DeleteGameStepsRequestObject) (oapiprivate.DeleteGameStepsResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.DeleteGameStepsRequestObject) oapiprivate.DeleteGameStepsResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.DeleteGameStepsResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.DeleteGameStepsRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EndAbandonedGames provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) EndAbandonedGames(ctx context.Context, input oapipublic.EndAbandonedGamesRequestObject) (oapipublic.EndAbandonedGamesResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for EndAbandonedGames")
	}

	var r0 oapipublic.EndAbandonedGamesResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.EndAbandonedGamesRequestObject) (oapipublic.EndAbandonedGamesResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.EndAbandonedGamesRequestObject) oapipublic.EndAbandonedGamesResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapipublic.EndAbandonedGamesResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapipublic.EndAbandonedGamesRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EndGame provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) EndGame(ctx context.Context, input oapiprivate.EndGameRequestObject) (oapiprivate.EndGameResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for EndGame")
	}

	var r0 oapiprivate.EndGameResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.EndGameRequestObject) (oapiprivate.EndGameResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.EndGameRequestObject) oapiprivate.EndGameResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.EndGameResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.EndGameRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenerateRecentStatistics provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) GenerateRecentStatistics(ctx context.Context, input oapipublic.GenerateRecentStatisticsRequestObject) (oapipublic.GenerateRecentStatisticsResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for GenerateRecentStatistics")
	}

	var r0 oapipublic.GenerateRecentStatisticsResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.GenerateRecentStatisticsRequestObject) (oapipublic.GenerateRecentStatisticsResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.GenerateRecentStatisticsRequestObject) oapipublic.GenerateRecentStatisticsResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapipublic.GenerateRecentStatisticsResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapipublic.GenerateRecentStatisticsRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGame provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) GetGame(ctx context.Context, input oapiprivate.GetGameRequestObject) (oapiprivate.GetGameResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for GetGame")
	}

	var r0 oapiprivate.GetGameResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetGameRequestObject) (oapiprivate.GetGameResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetGameRequestObject) oapiprivate.GetGameResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.GetGameResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.GetGameRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGameHistory provides a mock function with given fields: ctx, input, user
func (_m *GameServiceInterface) GetGameHistory(ctx context.Context, input oapiprivate.GetGameHistoryRequestObject, user models.User) (oapiprivate.GetGameHistoryResponseObject, error) {
	ret := _m.Called(ctx, input, user)

	if len(ret) == 0 {
		panic("no return value specified for GetGameHistory")
	}

	var r0 oapiprivate.GetGameHistoryResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetGameHistoryRequestObject, models.User) (oapiprivate.GetGameHistoryResponseObject, error)); ok {
		return rf(ctx, input, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetGameHistoryRequestObject, models.User) oapiprivate.GetGameHistoryResponseObject); ok {
		r0 = rf(ctx, input, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.GetGameHistoryResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.GetGameHistoryRequestObject, models.User) error); ok {
		r1 = rf(ctx, input, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGameStatistics provides a mock function with given fields: ctx, input
func (_m *GameServiceInterface) GetGameStatistics(ctx context.Context, input oapipublic.GetGameStatisticsRequestObject) (oapipublic.GetGameStatisticsResponseObject, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for GetGameStatistics")
	}

	var r0 oapipublic.GetGameStatisticsResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.GetGameStatisticsRequestObject) (oapipublic.GetGameStatisticsResponseObject, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapipublic.GetGameStatisticsRequestObject) oapipublic.GetGameStatisticsResponseObject); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapipublic.GetGameStatisticsResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapipublic.GetGameStatisticsRequestObject) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRecentStatistics provides a mock function with given fields: ctx, input, user
func (_m *GameServiceInterface) GetRecentStatistics(ctx context.Context, input oapiprivate.GetRecentStatisticsRequestObject, user models.User) (oapiprivate.GetRecentStatisticsResponseObject, error) {
	ret := _m.Called(ctx, input, user)

	if len(ret) == 0 {
		panic("no return value specified for GetRecentStatistics")
	}

	var r0 oapiprivate.GetRecentStatisticsResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetRecentStatisticsRequestObject, models.User) (oapiprivate.GetRecentStatisticsResponseObject, error)); ok {
		return rf(ctx, input, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.GetRecentStatisticsRequestObject, models.User) oapiprivate.GetRecentStatisticsResponseObject); ok {
		r0 = rf(ctx, input, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.GetRecentStatisticsResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.GetRecentStatisticsRequestObject, models.User) error); ok {
		r1 = rf(ctx, input, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListActiveGames provides a mock function with given fields: ctx, input, user
func (_m *GameServiceInterface) ListActiveGames(ctx context.Context, input oapiprivate.ListActiveGamesRequestObject, user models.User) (oapiprivate.ListActiveGamesResponseObject, error) {
	ret := _m.Called(ctx, input, user)

	if len(ret) == 0 {
		panic("no return value specified for ListActiveGames")
	}

	var r0 oapiprivate.ListActiveGamesResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.ListActiveGamesRequestObject, models.User) (oapiprivate.ListActiveGamesResponseObject, error)); ok {
		return rf(ctx, input, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.ListActiveGamesRequestObject, models.User) oapiprivate.ListActiveGamesResponseObject); ok {
		r0 = rf(ctx, input, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.ListActiveGamesResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.ListActiveGamesRequestObject, models.User) error); ok {
		r1 = rf(ctx, input, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartGame provides a mock function with given fields: ctx, input, user
func (_m *GameServiceInterface) StartGame(ctx context.Context, input oapiprivate.StartGameRequestObject, user models.User) (oapiprivate.StartGameResponseObject, error) {
	ret := _m.Called(ctx, input, user)

	if len(ret) == 0 {
		panic("no return value specified for StartGame")
	}

	var r0 oapiprivate.StartGameResponseObject
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.StartGameRequestObject, models.User) (oapiprivate.StartGameResponseObject, error)); ok {
		return rf(ctx, input, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, oapiprivate.StartGameRequestObject, models.User) oapiprivate.StartGameResponseObject); ok {
		r0 = rf(ctx, input, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(oapiprivate.StartGameResponseObject)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, oapiprivate.StartGameRequestObject, models.User) error); ok {
		r1 = rf(ctx, input, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGameServiceInterface creates a new instance of GameServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGameServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *GameServiceInterface {
	mock := &GameServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
