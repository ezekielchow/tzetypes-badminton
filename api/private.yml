openapi: "3.0.0"
info:
  version: 1.0.0
  title: tzetypes-badminton
  description: tzetypes-badminton
  contact:
    name: ezekiel
    url: https://github.com/ezekielchow
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
security:
  - BearerAuth: []
paths:
  /dashboard:
    get:
      operationId: dashboard
      responses:
        "204":
          description: dashboard success
        default:
          $ref: "#/components/responses/ErrorResponseSchema"

  /logout:
    get:
      operationId: logout
      tags:
        - users
      responses:
        "204":
          description: logout success
        default:
          $ref: "#/components/responses/ErrorResponseSchema"

  /players:
    get:
      summary: List players
      operationId: listPlayers
      parameters:
        - name: owner_id
          in: query
          required: false
          description: The ID of the owner to filter players.
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: The page number for pagination.
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: true
          description: The number of players per page.
          schema:
            type: integer
            default: 10
        - name: sortArrangement
          in: query
          required: false
          description: sort by and direction.
          schema:
            type: string
      responses:
        "200":
          description: A list of players
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: array
                    items:
                      $ref: "#/components/schemas/Player"
                  pagination:
                    type: object
                    required:
                      - totalItems
                      - totalPages
                      - currentPage
                      - pageSize
                    properties:
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
                      currentPage:
                        type: integer
                      pageSize:
                        type: integer

  /players/add:
    post:
      operationId: add player
      tags:
        - players
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPlayerRequestSchema"
      responses:
        "201":
          description: add player success
        default:
          $ref: "#/components/responses/ErrorResponseSchema"

  /users/current:
    get:
      operationId: get logged in user # Corrected Typo
      tags:
        - users
      responses:
        "200":
          description: get user success
          $ref: "#/components/responses/CurrentUserResponseSchema"
        default:
          $ref: "#/components/responses/ErrorResponseSchema"

components:
  securitySchemes: # Added missing security scheme
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    AddPlayerRequestSchema:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    User:
      type: object
      required:
        - id
        - email
        - created_at
        - updated_at
      properties:
        id:
          type: string
        email:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    Player:
      type: object
      required:
        - id
        - user_id
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: The unique identifier for the player.
        user_id:
          type: string
          description: The unique identifier for the player's user.
        name:
          type: string
          description: The name of the player.
        created_at:
          type: string
        updated_at:
          type: string

  responses:
    ErrorResponseSchema:
      description: Error res
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    CurrentUserResponseSchema:
      description: current user success
      content:
        application/json:
          schema:
            type: object
            required:
              - user
            properties:
              user:
                $ref: "#/components/schemas/User"
