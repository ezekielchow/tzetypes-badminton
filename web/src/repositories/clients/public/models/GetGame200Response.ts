/* tslint:disable */
/* eslint-disable */
/**
 * tzetypes-badminton
 * tzetypes-badminton
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Game } from './Game';
import {
    GameFromJSON,
    GameFromJSONTyped,
    GameToJSON,
} from './Game';
import type { GameStep } from './GameStep';
import {
    GameStepFromJSON,
    GameStepFromJSONTyped,
    GameStepToJSON,
} from './GameStep';
import type { GameStatistic } from './GameStatistic';
import {
    GameStatisticFromJSON,
    GameStatisticFromJSONTyped,
    GameStatisticToJSON,
} from './GameStatistic';

/**
 * 
 * @export
 * @interface GetGame200Response
 */
export interface GetGame200Response {
    /**
     * 
     * @type {Array<GameStep>}
     * @memberof GetGame200Response
     */
    steps: Array<GameStep>;
    /**
     * 
     * @type {Game}
     * @memberof GetGame200Response
     */
    game: Game;
    /**
     * 
     * @type {GameStatistic}
     * @memberof GetGame200Response
     */
    statistics?: GameStatistic;
}

/**
 * Check if a given object implements the GetGame200Response interface.
 */
export function instanceOfGetGame200Response(value: object): value is GetGame200Response {
    if (!('steps' in value) || value['steps'] === undefined) return false;
    if (!('game' in value) || value['game'] === undefined) return false;
    return true;
}

export function GetGame200ResponseFromJSON(json: any): GetGame200Response {
    return GetGame200ResponseFromJSONTyped(json, false);
}

export function GetGame200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetGame200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'steps': ((json['steps'] as Array<any>).map(GameStepFromJSON)),
        'game': GameFromJSON(json['game']),
        'statistics': json['statistics'] == null ? undefined : GameStatisticFromJSON(json['statistics']),
    };
}

export function GetGame200ResponseToJSON(value?: GetGame200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'steps': ((value['steps'] as Array<any>).map(GameStepToJSON)),
        'game': GameToJSON(value['game']),
        'statistics': GameStatisticToJSON(value['statistics']),
    };
}

