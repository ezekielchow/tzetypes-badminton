/* tslint:disable */
/* eslint-disable */
/**
 * tzetypes-badminton
 * tzetypes-badminton
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GameHistory
 */
export interface GameHistory {
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    gameId: string;
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    playerPosition: string;
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof GameHistory
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the GameHistory interface.
 */
export function instanceOfGameHistory(value: object): value is GameHistory {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('gameId' in value) || value['gameId'] === undefined) return false;
    if (!('playerPosition' in value) || value['playerPosition'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function GameHistoryFromJSON(json: any): GameHistory {
    return GameHistoryFromJSONTyped(json, false);
}

export function GameHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['user_id'],
        'gameId': json['game_id'],
        'playerPosition': json['player_position'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
    };
}

export function GameHistoryToJSON(value?: GameHistory | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'game_id': value['gameId'],
        'player_position': value['playerPosition'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

